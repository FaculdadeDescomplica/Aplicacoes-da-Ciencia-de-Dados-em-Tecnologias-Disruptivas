# -*- coding: utf-8 -*-
"""Aplicações da Ciência de Dados em Tecnologias Disruptivas - Módulo 7

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1EUCWKvxMLex08t-fHH2tlBFzeCYogJ-z

MedianFlow no Google Colab
"""

import cv2
from google.colab import files
from google.colab.patches import cv2_imshow

# Fazer upload de um vídeo
uploaded = files.upload()

# Obter o nome do vídeo carregado
video_path = next(iter(uploaded))

# Carregar o vídeo
cap = cv2.VideoCapture(video_path)

# Verificar se o vídeo foi carregado corretamente
if not cap.isOpened():
    print("Erro ao carregar o vídeo.")
else:
    # Ler o primeiro frame do vídeo
    ret, frame = cap.read()

    if not ret:
        print("Erro ao ler o primeiro frame.")
    else:
        # Ajuste a região de interesse (ROI) de forma mais precisa
        height, width, _ = frame.shape
        bbox = (int(width * 0.3), int(height * 0.4), int(width * 0.4), int(height * 0.2))  # Ajuste baseado na proporção da imagem

        # Inicializar o rastreador MedianFlow (usando a API legacy do OpenCV)
        tracker = cv2.legacy.TrackerMedianFlow_create()
        tracker.init(frame, bbox)

        # Loop para rastrear o objeto ao longo do vídeo
        while True:
            ret, frame = cap.read()
            if not ret:
                break

            # Atualizar o rastreamento
            success, bbox = tracker.update(frame)

            if success:
                # Desenhar a caixa ao redor do objeto rastreado
                p1 = (int(bbox[0]), int(bbox[1]))
                p2 = (int(bbox[0] + bbox[2]), int(bbox[1] + bbox[3]))
                cv2.rectangle(frame, p1, p2, (255, 0, 0), 2, 1)
            else:
                cv2.putText(frame, "Rastreamento falhou", (100, 80), cv2.FONT_HERSHEY_SIMPLEX, 0.75, (0, 0, 255), 2)

            # Exibir o frame com a caixa delimitadora no Google Colab
            cv2_imshow(frame)

        cap.release()
        cv2.destroyAllWindows()

"""Testando a Robustez do MedianFlow"""

import cv2
from google.colab import files
from google.colab.patches import cv2_imshow

# Fazer upload de um vídeo ou imagem para rastreamento
uploaded = files.upload()

# Obter o nome do vídeo carregado
video_path = next(iter(uploaded))

# Carregar o vídeo
cap = cv2.VideoCapture(video_path)

# Verificar se o vídeo foi carregado corretamente
if not cap.isOpened():
    print("Erro ao carregar o vídeo.")
else:
    # Ler o primeiro frame do vídeo
    ret, frame = cap.read()

    if not ret:
        print("Erro ao ler o primeiro frame.")
    else:
        # Ajuste a região de interesse (ROI) de forma mais precisa
        height, width, _ = frame.shape

        # Definir a ROI com base na localização aproximada do objeto (neste exemplo, parte central)
        # Você pode ajustar os valores com base no objeto real
        bbox = (int(width * 0.3), int(height * 0.3), int(width * 0.3), int(height * 0.3))

        # Inicializar o rastreador MedianFlow (usando a API legacy do OpenCV)
        tracker = cv2.legacy.TrackerMedianFlow_create()
        tracker.init(frame, bbox)

        # Loop para rastrear o objeto ao longo do vídeo
        while True:
            ret, frame = cap.read()
            if not ret:
                break

            # Atualizar o rastreamento
            success, bbox = tracker.update(frame)

            if success:
                # Desenhar a caixa ao redor do objeto rastreado
                p1 = (int(bbox[0]), int(bbox[1]))
                p2 = (int(bbox[0] + bbox[2]), int(bbox[1] + bbox[3]))
                cv2.rectangle(frame, p1, p2, (255, 0, 0), 2, 1)
            else:
                cv2.putText(frame, "Rastreamento falhou", (100, 80), cv2.FONT_HERSHEY_SIMPLEX, 0.75, (0, 0, 255), 2)

            # Exibir o frame com a caixa delimitadora no Google Colab
            cv2_imshow(frame)

        cap.release()
        cv2.destroyAllWindows()